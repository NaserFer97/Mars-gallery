{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naser\\\\OneDrive\\\\Escritorio\\\\React-Mars-Rover-\\\\src\\\\pages\\\\main.js\";\nimport React, { useState, useEffect } from 'react';\nimport './main.css'; // Components for selecting date, rover, and camera views\n\nimport DateSlider from '../widgets/DateSlider';\nimport RoverSelector from '../widgets/RoverSelector';\nimport CameraSelection from '../widgets/CameraSelection'; // Utility to check if a date is within the active period of the rovers\n\nimport { isActive } from '../services/sols'; // Lightbox component for displaying images in an overlay\n\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // Styles for lightbox component\n\nfunction RoverSearch(props) {\n  // Extracting props for use within the component\n  const {\n    rovers,\n    cameras,\n    camera,\n    roverSelection,\n    earth_date,\n    photos,\n    onCriteriaChange,\n    onSearch\n  } = props; // State for managing the lightbox display and the index of the selected photo\n\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false);\n  const [photoIndex, setPhotoIndex] = useState(0); // Effect for parallax background on scroll\n\n  useEffect(() => {\n    // Function to handle parallax effect on scroll\n    const handleScroll = () => {// ...\n    }; // Adding scroll event listener\n\n\n    window.addEventListener('scroll', handleScroll); // Clean-up function to remove event listener\n\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []); // Updates the search criteria in the component's state and triggers a new search\n\n  const setCriteriaAndPublish = newCriteria => {\n    // Merging new criteria with existing props and triggering criteria change\n    const merged = { ...props,\n      ...newCriteria\n    };\n    onCriteriaChange(merged);\n    onSearch(merged);\n  }; // Creates an object to track the active status of each rover based on the selected earth date\n\n\n  const roversActive = rovers.reduce((acc, curr) => {// ...\n  }, {}); // Handles opening of lightbox to the clicked image\n\n  const handleImageClick = index => {// ...\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Mars Rover Images\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid App-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"col-10 offset-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DateSlider, {\n    earth_date: earth_date,\n    onDateChanged: date => setCriteriaAndPublish({\n      earth_date: date\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RoverSelector, {\n    roversActive: roversActive,\n    rovers: rovers,\n    roverSelection: roverSelection,\n    onRoverSelection: selected => setCriteriaAndPublish({\n      roverSelection: selected\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CameraSelection, {\n    camera: camera,\n    cameras: cameras,\n    onCameraSelected: selectedCamera => setCriteriaAndPublish({\n      camera: selectedCamera\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10 offset-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, photos.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"No results\") : photos.map((photo, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: photo.id,\n    className: \"col-lg-4 col-12\",\n    onClick: () => handleImageClick(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"App-img-result\",\n    src: photo.img_src,\n    alt: \"Mars\",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }))))))), isLightboxOpen && /*#__PURE__*/React.createElement(Lightbox, {\n    mainSrc: photos[photoIndex].img_src,\n    nextSrc: photos[(photoIndex + 1) % photos.length].img_src,\n    prevSrc: photos[(photoIndex + photos.length - 1) % photos.length].img_src,\n    onCloseRequest: () => setIsLightboxOpen(false),\n    onMovePrevRequest: () => setPhotoIndex((photoIndex + photos.length - 1) % photos.length),\n    onMoveNextRequest: () => setPhotoIndex((photoIndex + 1) % photos.length),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default RoverSearch;","map":{"version":3,"sources":["C:/Users/naser/OneDrive/Escritorio/React-Mars-Rover-/src/pages/main.js"],"names":["React","useState","useEffect","DateSlider","RoverSelector","CameraSelection","isActive","Lightbox","RoverSearch","props","rovers","cameras","camera","roverSelection","earth_date","photos","onCriteriaChange","onSearch","isLightboxOpen","setIsLightboxOpen","photoIndex","setPhotoIndex","handleScroll","window","addEventListener","removeEventListener","setCriteriaAndPublish","newCriteria","merged","roversActive","reduce","acc","curr","handleImageClick","index","date","selected","selectedCamera","length","map","photo","id","img_src","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './main.css';\n// Components for selecting date, rover, and camera views\nimport DateSlider from '../widgets/DateSlider';\nimport RoverSelector from '../widgets/RoverSelector';\nimport CameraSelection from '../widgets/CameraSelection';\n// Utility to check if a date is within the active period of the rovers\nimport { isActive } from '../services/sols';\n// Lightbox component for displaying images in an overlay\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // Styles for lightbox component\n\nfunction RoverSearch(props) {\n  // Extracting props for use within the component\n  const {\n    rovers,\n    cameras,\n    camera,\n    roverSelection,\n    earth_date,\n    photos,\n    onCriteriaChange,\n    onSearch,\n  } = props;\n\n  // State for managing the lightbox display and the index of the selected photo\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false);\n  const [photoIndex, setPhotoIndex] = useState(0);\n\n  // Effect for parallax background on scroll\n  useEffect(() => {\n    // Function to handle parallax effect on scroll\n    const handleScroll = () => {\n      // ...\n    };\n\n    // Adding scroll event listener\n    window.addEventListener('scroll', handleScroll);\n    // Clean-up function to remove event listener\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Updates the search criteria in the component's state and triggers a new search\n  const setCriteriaAndPublish = (newCriteria) => {\n    // Merging new criteria with existing props and triggering criteria change\n    const merged = { ...props, ...newCriteria };\n    onCriteriaChange(merged);\n    onSearch(merged);\n  };\n\n  // Creates an object to track the active status of each rover based on the selected earth date\n  const roversActive = rovers.reduce((acc, curr) => {\n    // ...\n  }, {});\n\n  // Handles opening of lightbox to the clicked image\n  const handleImageClick = (index) => {\n    // ...\n  };\n\n  return (\n    <div>\n      {/* Page header with title */}\n      <header className=\"App-header\">\n        <h2>Mars Rover Images</h2>\n      </header>\n      {/* Form for selecting search criteria */}\n      <div className=\"container-fluid App-form\">\n        <div className=\"row\">\n          <form className=\"col-10 offset-1\">\n            {/* Date slider for selecting the earth date */}\n            <DateSlider earth_date={earth_date} onDateChanged={(date) => setCriteriaAndPublish({ earth_date: date })} />\n            {/* Rover selection for choosing which rovers' images to display */}\n            <RoverSelector roversActive={roversActive} rovers={rovers} roverSelection={roverSelection} onRoverSelection={(selected) => setCriteriaAndPublish({ roverSelection: selected })} />\n            {/* Camera selection for filtering images by camera type */}\n            <CameraSelection camera={camera} cameras={cameras} onCameraSelected={(selectedCamera) => setCriteriaAndPublish({ camera: selectedCamera })} />\n          </form>\n        </div>\n        {/* Display area for search results */}\n        <div className=\"row\">\n          <div className=\"col-10 offset-1\">\n            <div className=\"row\">\n              {/* Conditionally render no results message or a list of image thumbnails */}\n              {photos.length === 0 ? (\n                <p>No results</p>\n              ) : (\n                photos.map((photo, index) => (\n                  <div key={photo.id} className=\"col-lg-4 col-12\" onClick={() => handleImageClick(index)}>\n                    <img className=\"App-img-result\" src={photo.img_src} alt=\"Mars\" style={{ cursor: 'pointer' }} />\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Lightbox component for viewing images in a modal dialog */}\n      {isLightboxOpen && (\n        <Lightbox\n          mainSrc={photos[photoIndex].img_src}\n          nextSrc={photos[(photoIndex + 1) % photos.length].img_src}\n          prevSrc={photos[(photoIndex + photos.length - 1) % photos.length].img_src}\n          onCloseRequest={() => setIsLightboxOpen(false)}\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + photos.length - 1) % photos.length)}\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % photos.length)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default RoverSearch;\n"]},"metadata":{},"sourceType":"module"}