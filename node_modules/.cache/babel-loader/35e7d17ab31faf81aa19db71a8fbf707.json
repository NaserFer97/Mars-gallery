{"ast":null,"code":"import moment from'moment';//  first and last days of the Mars Rover mission\nvar firstDay=\"2004-01-05\",lastDay=\"2019-09-28\";// Define a constant for the date format to be used throughout the application\nexport{firstDay,lastDay};export var dateFormat=\"YYYY-MM-DD\";// Convert an Earth date to a Martian sol (a Martian day).\n// Mars sols are counted from the first day of the mission.\nexport var dateToSol=function dateToSol(date){return moment(date,dateFormat).diff(moment(firstDay,dateFormat),'days')+1;};// Convert a Martian sol back to an Earth date.\n// Adds the number of sols to the first day of the mission to calculate the date.\nexport var solToDate=function solToDate(sol){return moment(firstDay,dateFormat).add(sol-1,'days').format(dateFormat);};// Calculate the number of days between two dates.\nexport var daysBetween=function daysBetween(startDate,lastDate){return moment(lastDate,dateFormat).diff(moment(startDate,dateFormat),'days')+1;};// Determine if a selected date is within a given active date range.\n// This is to check if a rover was active on a certain date.\nexport var isActive=function isActive(rangeStart,rangeEnd,selected){var fromMoment=moment(rangeStart,dateFormat);var toMoment=moment(rangeEnd,dateFormat);var selectedMoment=moment(selected,dateFormat);return selectedMoment>=fromMoment&&selectedMoment<=toMoment;};","map":{"version":3,"sources":["C:/Users/naser/OneDrive/Escritorio/React-Mars-Rover-/src/services/sols.js"],"names":["moment","firstDay","lastDay","dateFormat","dateToSol","date","diff","solToDate","sol","add","format","daysBetween","startDate","lastDate","isActive","rangeStart","rangeEnd","selected","fromMoment","toMoment","selectedMoment"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CAEA;GACcC,CAAAA,Q,CAAsB,Y,CAAZC,O,CAA0B,Y,CAClD;yBACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,YAAnB,CAEP;AACA;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,QACvBL,CAAAA,MAAM,CAACK,IAAD,CAAOF,UAAP,CAAN,CAAyBG,IAAzB,CAA8BN,MAAM,CAACC,QAAD,CAAWE,UAAX,CAApC,CAA4D,MAA5D,EAAsE,CAD/C,EAAlB,CAGP;AACA;AACA,MAAO,IAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,QACvBR,CAAAA,MAAM,CAACC,QAAD,CAAWE,UAAX,CAAN,CAA6BM,GAA7B,CAAiCD,GAAG,CAAG,CAAvC,CAA0C,MAA1C,EAAkDE,MAAlD,CAAyDP,UAAzD,CADuB,EAAlB,CAGP;AACA,MAAO,IAAMQ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,SAAD,CAAYC,QAAZ,QACzBb,CAAAA,MAAM,CAACa,QAAD,CAAWV,UAAX,CAAN,CAA6BG,IAA7B,CAAkCN,MAAM,CAACY,SAAD,CAAYT,UAAZ,CAAxC,CAAiE,MAAjE,EAA2E,CADlD,EAApB,CAGP;AACA;AACA,MAAO,IAAMW,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,UAAD,CAAaC,QAAb,CAAuBC,QAAvB,CAAoC,CACxD,GAAMC,CAAAA,UAAU,CAAGlB,MAAM,CAACe,UAAD,CAAaZ,UAAb,CAAzB,CACA,GAAMgB,CAAAA,QAAQ,CAAGnB,MAAM,CAACgB,QAAD,CAAWb,UAAX,CAAvB,CACA,GAAMiB,CAAAA,cAAc,CAAGpB,MAAM,CAACiB,QAAD,CAAWd,UAAX,CAA7B,CACA,MAAOiB,CAAAA,cAAc,EAAIF,UAAlB,EAAgCE,cAAc,EAAID,QAAzD,CACH,CALM","sourcesContent":["import moment from 'moment';\n\n//  first and last days of the Mars Rover mission\nexport const [firstDay, lastDay] = [\"2004-01-05\", \"2019-09-28\"];\n// Define a constant for the date format to be used throughout the application\nexport const dateFormat = \"YYYY-MM-DD\";\n\n// Convert an Earth date to a Martian sol (a Martian day).\n// Mars sols are counted from the first day of the mission.\nexport const dateToSol = (date) => \n  moment(date, dateFormat).diff(moment(firstDay, dateFormat), 'days') + 1;\n\n// Convert a Martian sol back to an Earth date.\n// Adds the number of sols to the first day of the mission to calculate the date.\nexport const solToDate = (sol) => \n  moment(firstDay, dateFormat).add(sol - 1, 'days').format(dateFormat);\n\n// Calculate the number of days between two dates.\nexport const daysBetween = (startDate, lastDate) => \n  moment(lastDate, dateFormat).diff(moment(startDate, dateFormat), 'days') + 1;\n\n// Determine if a selected date is within a given active date range.\n// This is to check if a rover was active on a certain date.\nexport const isActive = (rangeStart, rangeEnd, selected) => {\n    const fromMoment = moment(rangeStart, dateFormat);\n    const toMoment = moment(rangeEnd, dateFormat);\n    const selectedMoment = moment(selected, dateFormat);\n    return selectedMoment >= fromMoment && selectedMoment <= toMoment;\n};\n"]},"metadata":{},"sourceType":"module"}