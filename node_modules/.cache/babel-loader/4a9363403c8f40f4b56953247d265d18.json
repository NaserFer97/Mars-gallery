{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naser\\\\OneDrive\\\\Escritorio\\\\React-Mars-Rover-\\\\src\\\\widgets\\\\DateSlider.js\";\nimport React from 'react';\nimport './dateslider.css'; // Importing utility functions from the 'sols' service that help with date calculations.\n\nimport { firstDay, lastDay, dateToSol, solToDate, daysBetween } from '../services/sols';\n\nconst DateSlider = ({\n  earth_date,\n  onDateChanged\n}) => {\n  // Calculate the total number of days between the first and last day of the mission.\n  const days = daysBetween(firstDay, lastDay); // Convert the current Earth date to the corresponding Martian sol.\n\n  const sol = dateToSol(earth_date); // This function is called whenever the slider value changes.\n  // It converts the sol back to an Earth date and triggers the onDateChanged event.\n\n  function onSlide(event) {\n    onDateChanged(solToDate(event.target.value));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Dateslider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Earth Day\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Dateslider-date\",\n    \"data-testid\": \"date-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, earth_date))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"date-slider\",\n    type: \"range\",\n    id: \"date\",\n    className: \"form-control\",\n    min: \"1\",\n    max: days,\n    value: sol,\n    onChange: onSlide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, firstDay), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mx-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"|\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, lastDay)))));\n};\n\nexport default DateSlider;","map":{"version":3,"sources":["C:/Users/naser/OneDrive/Escritorio/React-Mars-Rover-/src/widgets/DateSlider.js"],"names":["React","firstDay","lastDay","dateToSol","solToDate","daysBetween","DateSlider","earth_date","onDateChanged","days","sol","onSlide","event","target","value","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP,C,CACA;;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,EAAuCC,SAAvC,EAAkDC,WAAlD,QAAqE,kBAArE;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AAClD;AACA,QAAMC,IAAI,GAAGJ,WAAW,CAACJ,QAAD,EAAWC,OAAX,CAAxB,CAFkD,CAGlD;;AACA,QAAMQ,GAAG,GAAGP,SAAS,CAACI,UAAD,CAArB,CAJkD,CAMlD;AACA;;AACA,WAASI,OAAT,CAAiBC,KAAjB,EAAwB;AACpBJ,IAAAA,aAAa,CAACJ,SAAS,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CAAb;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB,WAAtB,CAFJ,eAII;AAAG,IAAA,SAAS,EAAC,iBAAb;AAA+B,mBAAY,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDR,UAAzD,CAJJ,CADJ,CADJ,eASI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAO,mBAAY,aAAnB;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,SAAS,EAAC,cAHd;AAII,IAAA,GAAG,EAAC,GAJR;AAKI,IAAA,GAAG,EAAEE,IALT;AAMI,IAAA,KAAK,EAAEC,GANX;AAOI,IAAA,QAAQ,EAAEC,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAaI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BV,QAA1B,CADJ,eAEI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuB,GAAvB,CAFJ,eAGI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,OAA1B,CAHJ,CAbJ,CADJ,CATJ,CADJ;AAiCH,CA7CD;;AA+CA,eAAeI,UAAf","sourcesContent":["import React from 'react';\nimport './dateslider.css';\n// Importing utility functions from the 'sols' service that help with date calculations.\nimport { firstDay, lastDay, dateToSol, solToDate, daysBetween } from '../services/sols';\n\nconst DateSlider = ({ earth_date, onDateChanged }) => {\n    // Calculate the total number of days between the first and last day of the mission.\n    const days = daysBetween(firstDay, lastDay);\n    // Convert the current Earth date to the corresponding Martian sol.\n    const sol = dateToSol(earth_date);\n\n    // This function is called whenever the slider value changes.\n    // It converts the sol back to an Earth date and triggers the onDateChanged event.\n    function onSlide(event) {\n        onDateChanged(solToDate(event.target.value));\n    }\n\n    return (\n        <div className=\"Dateslider\">\n            <div className=\"row\">\n                <div className=\"col-12\" style={{ textAlign: \"center\" }}>\n                    {/* Displaying the label for the date slider */}\n                    <label htmlFor=\"date\">Earth Day</label>\n                    {/* Displaying the currently selected Earth date */}\n                    <p className=\"Dateslider-date\" data-testid=\"date-label\">{earth_date}</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    {/* The range input represents the slider, allowing the user to select a date\n                        within the range of the mission's duration. */}\n                    <input data-testid=\"date-slider\"\n                        type=\"range\"\n                        id=\"date\"\n                        className=\"form-control\"\n                        min=\"1\"\n                        max={days}\n                        value={sol}\n                        onChange={onSlide}\n                    ></input>\n                    {/* Displays the start and end dates of the mission below the slider */}\n                    <div className=\"text-center mt-2\">\n                        <small className=\"small\">{firstDay}</small>\n                        <span className=\"mx-4\">|</span>\n                        <small className=\"small\">{lastDay}</small>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DateSlider;\n"]},"metadata":{},"sourceType":"module"}