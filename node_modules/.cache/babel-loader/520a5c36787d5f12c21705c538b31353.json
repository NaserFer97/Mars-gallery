{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naser\\\\OneDrive\\\\Escritorio\\\\React-Mars-Rover-\\\\src\\\\widgets\\\\CameraSelection.js\";\nimport React from \"react\";\nimport \"./roverselector.css\"; // The RoverSelector component allows users to select which Mars rovers' data they want to view.\n\nfunction RoverSelector({\n  roversActive,\n  rovers = [],\n  roverSelection,\n  onRoverSelection\n}) {\n  // onClick function toggles the selection state of a rover when its corresponding\n  // UI element is clicked.\n  const onClick = roverName => {\n    onRoverSelection({ ...roverSelection,\n      [roverName]: !roverSelection[roverName]\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoverSelector-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, rovers.map(rover => /*#__PURE__*/React.createElement(\"div\", {\n    key: rover.name // Unique key for each rover element, which is required by React\n    // Conditional class assignment; if the rover is not active on the selected date, \n    // add the 'inactive' class, which is likely styled differently\n    ,\n    className: `RoverSelector-card ${roversActive[rover.name.toLowerCase()] ? \"\" : \"inactive\"}` // Register the onClick handler for when the rover card is clicked\n    ,\n    onClick: () => onClick(rover.name.toLowerCase()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"RoverSelector-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    \"data-testid\": \"rover-selected\" // Test ID for testing purposes\n    ,\n    checked: roverSelection[rover.name.toLowerCase()],\n    onChange: () => {} // Empty onChange because the checkbox is controlled by the onClick on the label\n    // Stop the propagation to prevent the onClick on the label from being fired when the checkbox itself is clicked\n    ,\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), rover.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoverSelector-period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, rover.activePeriod[0], \" - \", rover.activePeriod[1])))));\n}\n\nexport default RoverSelector;","map":{"version":3,"sources":["C:/Users/naser/OneDrive/Escritorio/React-Mars-Rover-/src/widgets/CameraSelection.js"],"names":["React","RoverSelector","roversActive","rovers","roverSelection","onRoverSelection","onClick","roverName","map","rover","name","toLowerCase","e","stopPropagation","activePeriod"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP,C,CAEA;;AACA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,MAAM,GAAG,EAAzB;AAA6BC,EAAAA,cAA7B;AAA6CC,EAAAA;AAA7C,CAAvB,EAAwF;AAEtF;AACA;AACA,QAAMC,OAAO,GAAIC,SAAD,IAAe;AAC7BF,IAAAA,gBAAgB,CAAC,EACf,GAAGD,cADY;AAEf,OAACG,SAAD,GAAa,CAACH,cAAc,CAACG,SAAD;AAFb,KAAD,CAAhB;AAID,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGJ,MAAM,CAACK,GAAP,CAAYC,KAAD,iBACV;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,IADb,CACmB;AACjB;AACA;AAHF;AAIE,IAAA,SAAS,EAAG,sBAAqBR,YAAY,CAACO,KAAK,CAACC,IAAN,CAAWC,WAAX,EAAD,CAAZ,GAAyC,EAAzC,GAA8C,UAAW,EAJ5F,CAKE;AALF;AAME,IAAA,OAAO,EAAE,MAAML,OAAO,CAACG,KAAK,CAACC,IAAN,CAAWC,WAAX,EAAD,CANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,mBAAY,gBAFd,CAE+B;AAF/B;AAGE,IAAA,OAAO,EAAEP,cAAc,CAACK,KAAK,CAACC,IAAN,CAAWC,WAAX,EAAD,CAHzB;AAIE,IAAA,QAAQ,EAAE,MAAM,CAAE,CAJpB,CAIsB;AACpB;AALF;AAME,IAAA,OAAO,EAAGC,CAAD,IAAOA,CAAC,CAACC,eAAF,EANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAWGJ,KAAK,CAACC,IAXT,EAWc,GAXd,CARF,eAsBE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACK,YAAN,CAAmB,CAAnB,CADH,EACyB,KADzB,EAC6BL,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAD7B,CADF,CAtBF,CADD,CAFH,CADF;AAmCD;;AAED,eAAeb,aAAf","sourcesContent":["import React from \"react\";\r\nimport \"./roverselector.css\";\r\n\r\n// The RoverSelector component allows users to select which Mars rovers' data they want to view.\r\nfunction RoverSelector({ roversActive, rovers = [], roverSelection, onRoverSelection }) {\r\n  \r\n  // onClick function toggles the selection state of a rover when its corresponding\r\n  // UI element is clicked.\r\n  const onClick = (roverName) => {\r\n    onRoverSelection({\r\n      ...roverSelection,\r\n      [roverName]: !roverSelection[roverName],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"RoverSelector-container\">\r\n      {/* Map through the rovers array and create a card for each rover */}\r\n      {rovers.map((rover) => (\r\n        <div\r\n          key={rover.name} // Unique key for each rover element, which is required by React\r\n          // Conditional class assignment; if the rover is not active on the selected date, \r\n          // add the 'inactive' class, which is likely styled differently\r\n          className={`RoverSelector-card ${roversActive[rover.name.toLowerCase()] ? \"\" : \"inactive\"}`}\r\n          // Register the onClick handler for when the rover card is clicked\r\n          onClick={() => onClick(rover.name.toLowerCase())}\r\n        >\r\n          <label className=\"RoverSelector-title\">\r\n            {/* Checkbox allows users to select or deselect a rover.\r\n                It's checked state is bound to the roverSelection state */}\r\n            <input\r\n              type=\"checkbox\"\r\n              data-testid=\"rover-selected\" // Test ID for testing purposes\r\n              checked={roverSelection[rover.name.toLowerCase()]}\r\n              onChange={() => {}} // Empty onChange because the checkbox is controlled by the onClick on the label\r\n              // Stop the propagation to prevent the onClick on the label from being fired when the checkbox itself is clicked\r\n              onClick={(e) => e.stopPropagation()}\r\n            />\r\n            {rover.name} {/* Display the rover's name */}\r\n          </label>\r\n          {/* Display the active period of the rover */}\r\n          <div className=\"RoverSelector-period\">\r\n            <small>\r\n              {rover.activePeriod[0]} - {rover.activePeriod[1]}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoverSelector;\r\n"]},"metadata":{},"sourceType":"module"}