{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\naser\\\\OneDrive\\\\Escritorio\\\\React-Mars-Rover-\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\naser\\\\OneDrive\\\\Escritorio\\\\React-Mars-Rover-\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";// Importing necessary React hooks and components, along with CSS styles\nimport React,{useState,useEffect}from\"react\";import\"./main.css\";import DateSlider from\"../widgets/DateSlider\";import RoverSelector from\"../widgets/RoverSelector\";import CameraSelection from\"../widgets/CameraSelection\";import{isActive}from\"../services/sols\";import Lightbox from\"react-image-lightbox\";import\"react-image-lightbox/style.css\";// Importing Lightbox styles\n// RoverSearch component that takes props for various functionalities\nfunction RoverSearch(props){var rovers=props.rovers,cameras=props.cameras,camera=props.camera,roverSelection=props.roverSelection,earth_date=props.earth_date,photos=props.photos,onCriteriaChange=props.onCriteriaChange,onSearch=props.onSearch;// State for managing Lightbox visibility and selected photo index\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLightboxOpen=_useState2[0],setIsLightboxOpen=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),photoIndex=_useState4[0],setPhotoIndex=_useState4[1];// Effect hook to add parallax scrolling effect to the header\nuseEffect(function(){var handleScroll=function handleScroll(){var parallaxElement=document.querySelector(\".App-header\");if(parallaxElement){parallaxElement.style.backgroundPositionY=\"calc(50% - \".concat(window.pageYOffset*0.5,\"px)\");}};// Attaching scroll event listener\nwindow.addEventListener(\"scroll\",handleScroll);// Cleanup function to remove event listener\nreturn function(){return window.removeEventListener(\"scroll\",handleScroll);};},[]);// Function to merge criteria changes and initiate search\nvar setCriteriaAndPublish=function setCriteriaAndPublish(newCriteria){var merged=_objectSpread({},props,{},newCriteria);onCriteriaChange(merged);onSearch(merged);};// Determines active status for rovers based on the earth date\nvar roversActive=rovers.reduce(function(acc,curr){acc[curr.name.toLowerCase()]=isActive(curr.activePeriod[0],curr.activePeriod[1],earth_date);return acc;},{});// Function to handle image click to open Lightbox with selected photo\nvar handleImageClick=function handleImageClick(index){setPhotoIndex(index);setIsLightboxOpen(true);};// The main render function that displays the header, form selections, and images\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Mars Rover Images\")),/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid App-form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"form\",{className:\"col-10 offset-1\"},/*#__PURE__*/React.createElement(DateSlider,{earth_date:earth_date,x:true// onDateChanged is an event handler that updates the search criteria\n// with the new date selected from the DateSlider component\n,onDateChanged:function onDateChanged(date){return setCriteriaAndPublish({earth_date:date});}}),/*#__PURE__*/React.createElement(RoverSelector,{roversActive:roversActive,rovers:rovers,roverSelection:roverSelection// onRoverSelection is an event handler that updates the search criteria\n// with the new rover selected from the RoverSelector component\n,onRoverSelection:function onRoverSelection(selected){return setCriteriaAndPublish({roverSelection:selected});}}),/*#__PURE__*/React.createElement(CameraSelection,{camera:camera,cameras:cameras// onCameraSelected is an event handler that updates the search criteria\n// with the new camera selected from the CameraSelection component\n,onCameraSelected:function onCameraSelected(selectedCamera){return setCriteriaAndPublish({camera:selectedCamera});}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-10 offset-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},photos.length===0?/*#__PURE__*/React.createElement(\"p\",null,\"No results\"):photos.map(function(photo,index){return/*#__PURE__*/ (// Clickable image that will open the Lightbox\nReact.createElement(\"div\",{key:photo.id,className:\"col-lg-4 col-12\",onClick:function onClick(){return handleImageClick(index);}},/*#__PURE__*/React.createElement(\"img\",{className:\"App-img-result\",src:photo.img_src,alt:\"Mars\",style:{cursor:\"pointer\"}})));}))))),isLightboxOpen&&/*#__PURE__*/React.createElement(Lightbox,{mainSrc:photos[photoIndex].img_src,nextSrc:photos[(photoIndex+1)%photos.length].img_src,prevSrc:photos[(photoIndex+photos.length-1)%photos.length].img_src,onCloseRequest:function onCloseRequest(){return setIsLightboxOpen(false);},onMovePrevRequest:function onMovePrevRequest(){return setPhotoIndex((photoIndex+photos.length-1)%photos.length);},onMoveNextRequest:function onMoveNextRequest(){return setPhotoIndex((photoIndex+1)%photos.length);}}));}export default RoverSearch;","map":{"version":3,"sources":["C:/Users/naser/OneDrive/Escritorio/React-Mars-Rover-/src/pages/main.js"],"names":["React","useState","useEffect","DateSlider","RoverSelector","CameraSelection","isActive","Lightbox","RoverSearch","props","rovers","cameras","camera","roverSelection","earth_date","photos","onCriteriaChange","onSearch","isLightboxOpen","setIsLightboxOpen","photoIndex","setPhotoIndex","handleScroll","parallaxElement","document","querySelector","style","backgroundPositionY","window","pageYOffset","addEventListener","removeEventListener","setCriteriaAndPublish","newCriteria","merged","roversActive","reduce","acc","curr","name","toLowerCase","activePeriod","handleImageClick","index","date","selected","selectedCamera","length","map","photo","id","img_src","cursor"],"mappings":"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","sourcesContent":["// Importing necessary React hooks and components, along with CSS styles\nimport React, { useState, useEffect } from \"react\";\nimport \"./main.css\";\nimport DateSlider from \"../widgets/DateSlider\";\nimport RoverSelector from \"../widgets/RoverSelector\";\nimport CameraSelection from \"../widgets/CameraSelection\";\nimport { isActive } from \"../services/sols\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\"; // Importing Lightbox styles\n\n// RoverSearch component that takes props for various functionalities\nfunction RoverSearch(props) {\n  const {\n    rovers,\n    cameras,\n    camera,\n    roverSelection,\n    earth_date,\n    photos,\n    onCriteriaChange,\n    onSearch,\n  } = props;\n\n  // State for managing Lightbox visibility and selected photo index\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false);\n  const [photoIndex, setPhotoIndex] = useState(0);\n\n  // Effect hook to add parallax scrolling effect to the header\n  useEffect(() => {\n    const handleScroll = () => {\n      const parallaxElement = document.querySelector(\".App-header\");\n      if (parallaxElement) {\n        parallaxElement.style.backgroundPositionY = `calc(50% - ${window.pageYOffset *\n          0.5}px)`;\n      }\n    };\n\n    // Attaching scroll event listener\n    window.addEventListener(\"scroll\", handleScroll);\n    // Cleanup function to remove event listener\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // Function to merge criteria changes and initiate search\n  const setCriteriaAndPublish = (newCriteria) => {\n    const merged = { ...props, ...newCriteria };\n    onCriteriaChange(merged);\n    onSearch(merged);\n  };\n\n  // Determines active status for rovers based on the earth date\n  const roversActive = rovers.reduce((acc, curr) => {\n    acc[curr.name.toLowerCase()] = isActive(\n      curr.activePeriod[0],\n      curr.activePeriod[1],\n      earth_date\n    );\n    return acc;\n  }, {});\n\n  // Function to handle image click to open Lightbox with selected photo\n  const handleImageClick = (index) => {\n    setPhotoIndex(index);\n    setIsLightboxOpen(true);\n  };\n\n  // The main render function that displays the header, form selections, and images\n  return (\n    <div>\n      <header className=\"App-header\">\n        <h2>Mars Rover Images</h2>\n      </header>\n      <div className=\"container-fluid App-form\">\n        <div className=\"row\">\n          {/* Form and selection components */}\n          <form className=\"col-10 offset-1\">\n            <DateSlider\n              earth_date={earth_date}x\n              // onDateChanged is an event handler that updates the search criteria\n              // with the new date selected from the DateSlider component\n              onDateChanged={(date) =>\n                setCriteriaAndPublish({ earth_date: date })\n              }\n            />\n\n            <RoverSelector\n              roversActive={roversActive}\n              rovers={rovers}\n              roverSelection={roverSelection}\n              // onRoverSelection is an event handler that updates the search criteria\n              // with the new rover selected from the RoverSelector component\n              onRoverSelection={(selected) =>\n                setCriteriaAndPublish({ roverSelection: selected })\n              }\n            />\n\n            <CameraSelection\n              camera={camera}\n              cameras={cameras}\n              // onCameraSelected is an event handler that updates the search criteria\n              // with the new camera selected from the CameraSelection component\n              onCameraSelected={(selectedCamera) =>\n                setCriteriaAndPublish({ camera: selectedCamera })\n              }\n            />\n          </form>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-10 offset-1\">\n            <div className=\"row\">\n              {/* Displaying results, if no photos are available, show a message */}\n              {photos.length === 0 ? (\n                <p>No results</p>\n              ) : (\n                photos.map((photo, index) => (\n                  // Clickable image that will open the Lightbox\n                  <div\n                    key={photo.id}\n                    className=\"col-lg-4 col-12\"\n                    onClick={() => handleImageClick(index)}\n                  >\n                    <img\n                      className=\"App-img-result\"\n                      src={photo.img_src}\n                      alt=\"Mars\"\n                      style={{ cursor: \"pointer\" }}\n                    />\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Lightbox component for viewing and navigating photos */}\n      {isLightboxOpen && (\n        <Lightbox\n          mainSrc={photos[photoIndex].img_src}\n          nextSrc={photos[(photoIndex + 1) % photos.length].img_src}\n          prevSrc={\n            photos[(photoIndex + photos.length - 1) % photos.length].img_src\n          }\n          onCloseRequest={() => setIsLightboxOpen(false)}\n          onMovePrevRequest={() =>\n            setPhotoIndex((photoIndex + photos.length - 1) % photos.length)\n          }\n          onMoveNextRequest={() =>\n            setPhotoIndex((photoIndex + 1) % photos.length)\n          }\n        />\n      )}\n    </div>\n  );\n}\n\nexport default RoverSearch;\n"]},"metadata":{},"sourceType":"module"}