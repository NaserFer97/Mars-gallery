{"ast":null,"code":"import { connect } from 'react-redux';\nimport debounce from 'lodash/debounce';\nimport * as nasa from '../key/nasa';\nimport RoverSearch from './main'; // A static list of Mars Rovers with their active periods.\n\nexport const rovers = [{\n  name: \"Spirit\",\n  activePeriod: [\"2004-01-05\", \"2010-03-21\"]\n}, {\n  name: \"Opportunity\",\n  activePeriod: [\"2004-01-26\", \"2018-06-11\"]\n}, {\n  name: \"Curiosity\",\n  activePeriod: [\"2012-08-07\", \"2019-09-28\"]\n}]; // A mapping of camera codes to their full descriptive names.\n\nexport const cameras = {\n  FHAZ: \"Front Hazard Avoidance Camera\",\n  RHAZ: \"Rear Hazard Avoidance Camera\",\n  MAST: \"Mast Camera\",\n  CHEMCAM: \"Chemistry and Camera Complex\",\n  MAHLI: \"Mars Hand Lens Imager\",\n  MARDI: \"Mars Descent Imager\",\n  NAVCAM: \"Navigation Camera\",\n  PANCAM: \"Panoramic Camera\",\n  MINITES: \"Miniature Thermal Emission Spectrometer (Mini-TES)\"\n}; // A default selection state indicating which rovers to search images for.\n\nexport const roverSelection = {\n  spirit: true,\n  opportunity: true,\n  curiosity: true\n}; // A reducer function for the Redux store, managing state transitions based on actions.\n\nexport const reducer = (state = stateChunk, action) => {\n  switch (action.type) {\n    case \"CRITERIA\":\n      {\n        return { ...state,\n          ...action.criteria\n        };\n      }\n\n    case \"CRITERIA_CHANGE_FULFILLED\":\n      {\n        return { ...state,\n          photos: action.payload.map(response => response.photos).flat()\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nconst ConnectedRoverSearch = connect(state => state, dispatch => ({\n  onCriteriaChange: criteria => {\n    dispatch({\n      type: \"CRITERIA\",\n      criteria\n    });\n  },\n  onSearch: debounce(criteria => {\n    dispatch({\n      type: \"CRITERIA_CHANGE\",\n      criteria,\n      payload: nasa.searchImages(criteria)\n    });\n  }, 500)\n}))(RoverSearch);\nexport default ConnectedRoverSearch;","map":{"version":3,"sources":["C:/Users/naser/OneDrive/Escritorio/React-Mars-Rover-/src/pages/ConnectedRoverSearch.js"],"names":["connect","debounce","nasa","RoverSearch","rovers","name","activePeriod","cameras","FHAZ","RHAZ","MAST","CHEMCAM","MAHLI","MARDI","NAVCAM","PANCAM","MINITES","roverSelection","spirit","opportunity","curiosity","reducer","state","stateChunk","action","type","criteria","photos","payload","map","response","flat","ConnectedRoverSearch","dispatch","onCriteriaChange","onSearch","searchImages"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,QAAxB,C,CAIA;;AACA,OAAO,MAAMC,MAAM,GAAG,CACpB;AAAEC,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,YAAf;AAAhC,CADoB,EAEpB;AAAED,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,YAAf;AAArC,CAFoB,EAGpB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,YAAf;AAAnC,CAHoB,CAAf,C,CAOP;;AAEA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAE,+BADe;AAErBC,EAAAA,IAAI,EAAE,8BAFe;AAGrBC,EAAAA,IAAI,EAAE,aAHe;AAIrBC,EAAAA,OAAO,EAAE,8BAJY;AAKrBC,EAAAA,KAAK,EAAE,uBALc;AAMrBC,EAAAA,KAAK,EAAE,qBANc;AAOrBC,EAAAA,MAAM,EAAE,mBAPa;AAQrBC,EAAAA,MAAM,EAAE,kBARa;AASrBC,EAAAA,OAAO,EAAE;AATY,CAAhB,C,CAaP;;AACA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,MAAM,EAAE,IADoB;AAE5BC,EAAAA,WAAW,EAAE,IAFe;AAG5BC,EAAAA,SAAS,EAAE;AAHiB,CAAvB,C,CASP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGC,UAAT,EAAqBC,MAArB,KAAgC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,eAAO,EACL,GAAGH,KADE;AAEL,aAAGE,MAAM,CAACE;AAFL,SAAP;AAID;;AACD,SAAK,2BAAL;AAAkC;AAChC,eAAO,EACL,GAAGJ,KADE;AAELK,UAAAA,MAAM,EAAEH,MAAM,CAACI,OAAP,CAAeC,GAAf,CAAoBC,QAAD,IAAcA,QAAQ,CAACH,MAA1C,EAAkDI,IAAlD;AAFH,SAAP;AAID;;AACD;AAAS,aAAOT,KAAP;AAbX;AAeD,CAhBM;AAkBP,MAAMU,oBAAoB,GAAGhC,OAAO,CACjCsB,KAAD,IAAWA,KADuB,EAEjCW,QAAD,KAAe;AACbC,EAAAA,gBAAgB,EAAGR,QAAD,IAAc;AAC9BO,IAAAA,QAAQ,CAAC;AAACR,MAAAA,IAAI,EAAE,UAAP;AAAmBC,MAAAA;AAAnB,KAAD,CAAR;AACD,GAHY;AAIbS,EAAAA,QAAQ,EAAElC,QAAQ,CAAEyB,QAAD,IAAc;AAC/BO,IAAAA,QAAQ,CAAC;AAACR,MAAAA,IAAI,EAAE,iBAAP;AAA0BC,MAAAA,QAA1B;AAAoCE,MAAAA,OAAO,EAAE1B,IAAI,CAACkC,YAAL,CAAkBV,QAAlB;AAA7C,KAAD,CAAR;AACD,GAFiB,EAEf,GAFe;AAJL,CAAf,CAFkC,CAAP,CAU3BvB,WAV2B,CAA7B;AAYA,eAAe6B,oBAAf","sourcesContent":["import { connect } from 'react-redux';\nimport debounce from 'lodash/debounce';\nimport * as nasa from '../key/nasa';\nimport RoverSearch from './main';\n\n\n\n// A static list of Mars Rovers with their active periods.\nexport const rovers = [\n  { name: \"Spirit\", activePeriod: [\"2004-01-05\", \"2010-03-21\"] },\n  { name: \"Opportunity\", activePeriod: [\"2004-01-26\", \"2018-06-11\"] },\n  { name: \"Curiosity\", activePeriod: [\"2012-08-07\", \"2019-09-28\"] }\n];\n\n\n// A mapping of camera codes to their full descriptive names.\n\nexport const cameras = {\n  FHAZ: \"Front Hazard Avoidance Camera\",\n  RHAZ: \"Rear Hazard Avoidance Camera\",\n  MAST: \"Mast Camera\",\n  CHEMCAM: \"Chemistry and Camera Complex\",\n  MAHLI: \"Mars Hand Lens Imager\",\n  MARDI: \"Mars Descent Imager\",\n  NAVCAM: \"Navigation Camera\",\n  PANCAM: \"Panoramic Camera\",\n  MINITES: \"Miniature Thermal Emission Spectrometer (Mini-TES)\"\n};\n\n\n// A default selection state indicating which rovers to search images for.\nexport const roverSelection = {\n  spirit: true,\n  opportunity: true,\n  curiosity: true\n};\n\n\n\n\n// A reducer function for the Redux store, managing state transitions based on actions.\nexport const reducer = (state = stateChunk, action) => {\n  switch (action.type) {\n    case \"CRITERIA\": {\n      return {\n        ...state,\n        ...action.criteria\n      };\n    }\n    case \"CRITERIA_CHANGE_FULFILLED\": {\n      return {\n        ...state,\n        photos: action.payload.map((response) => response.photos).flat()\n      };\n    }\n    default: return state;\n  }\n};\n\nconst ConnectedRoverSearch = connect(\n  (state) => state,\n  (dispatch) => ({\n    onCriteriaChange: (criteria) => {\n      dispatch({type: \"CRITERIA\", criteria});\n    },\n    onSearch: debounce((criteria) => {\n      dispatch({type: \"CRITERIA_CHANGE\", criteria, payload: nasa.searchImages(criteria) });\n    }, 500)\n  })\n)(RoverSearch);\n\nexport default ConnectedRoverSearch;\n"]},"metadata":{},"sourceType":"module"}